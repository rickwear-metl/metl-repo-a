{"job":{"components":{"1268":{"id":1268,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":420,"y":49,"width":32,"height":32,"inputConnectorIDs":[1278],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1269":{"id":1269,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186829,"x":162,"y":78,"width":32,"height":32,"inputConnectorIDs":[1301],"outputSuccessConnectorIDs":[1275],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python Script 1"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\n###\n# Note: Python scripts within this component are executed by the underlying virtual machine hosting Matillion ETL\n# and utilise the memory and compute of this VM, this component is not designed for large scale data processing\n# scripts involving PySpark or other such compute-intensive packages\n###\nprint text + \" \" + str(number) + \" \" + str(date)\n\n#List files\nimport boto3\ns3_resource = boto3.resource('s3')\n\n\nfor bucket in s3_resource.buckets.all():\n     print(bucket.name)\n\n#going into folders\nfor obj in s3_resource.Bucket(\"metl-test-working-bucket\").objects.all():\n  if \"mattrob/stringcsv/csvCreateTable.csv\" in obj.key:\n    print(obj.key)\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 2"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true},"5":{"slot":5,"name":"User","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Privileged"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1270":{"id":1270,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186829,"x":272,"y":80,"width":32,"height":32,"inputConnectorIDs":[1275],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python Script 2"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\n###\n# Note: Python scripts within this component are executed by the underlying virtual machine hosting Matillion ETL\n# and utilise the memory and compute of this VM, this component is not designed for large scale data processing\n# scripts involving PySpark or other such compute-intensive packages\n###\ncursor = context.cursor()\ncursor.execute('SELECT * FROM `default`.`s3datasources`' )\nrowcount = cursor.fetchall()[0]\n\nprint (rowcount)\ncontext.updateVariable('rc', rowcount)\nprint (rc)\n"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false},"5":{"slot":5,"name":"User","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Restricted"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1271":{"id":1271,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":0,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[1279,1301],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1272":{"id":1272,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186829,"x":160,"y":0,"width":32,"height":32,"inputConnectorIDs":[1279],"outputSuccessConnectorIDs":[1276],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python Script 0"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print myvar\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print context.getGridVariable('mygridvar')\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\n###\n# Note: Python scripts within this component are executed by the underlying virtual machine hosting Matillion ETL\n# and utilise the memory and compute of this VM, this component is not designed for large scale data processing\n# scripts involving PySpark or other such compute-intensive packages\n###\nx = \"hello\"\n\nprint (x)\n\ncursor = context.cursor()\ncursor.execute('SELECT count(*) FROM `default`.`s3datasources`' )\nrowcount = cursor.fetchone()[0]\n\nprint rowcount\ncontext.updateVariable('rc', rowcount)\nprint rc\n\n\ncursor = context.cursor()\ncursor.execute('DESCRIBE DETAIL `default`.`s3datasources`' )\ndescribe = cursor.fetchall() \n\nprint describe\n\n#cursor = context.cursor()\n#cursor.execute('DESCRIBE `default`.`semi_structured_all`' )\n#describe2 = cursor.fetchall()\n\n#print describe2 "}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Jython"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":false},"5":{"slot":5,"name":"User","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Restricted"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1273":{"id":1273,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"CONDITIONAL","executionHint":"FLOW","implementationID":-1357378929,"x":288,"y":0,"width":32,"height":32,"inputConnectorIDs":[1276],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[1277],"outputFalseConnectorIDs":[1278],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"If 0"}}}},"visible":true},"2":{"slot":2,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":true},"3":{"slot":3,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"rc"},"2":{"slot":2,"type":"STRING","value":"Is"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"5"}}}},"visible":true},"4":{"slot":4,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"5":{"slot":5,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1274":{"id":1274,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":416,"y":-64,"width":32,"height":32,"inputConnectorIDs":[1277],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Success 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"1275":{"id":1275,"sourceID":1269,"targetID":1270},"1276":{"id":1276,"sourceID":1272,"targetID":1273}},"failureConnectors":{},"unconditionalConnectors":{"1279":{"id":1279,"sourceID":1271,"targetID":1272},"1301":{"id":1301,"sourceID":1271,"targetID":1269}},"trueConnectors":{"1277":{"id":1277,"sourceID":1273,"targetID":1274}},"falseConnectors":{"1278":{"id":1278,"sourceID":1273,"targetID":1268}},"iterationConnectors":{},"noteConnectors":{},"notes":{"1267":{"id":1267,"x":-482,"y":-205,"width":317,"height":79,"text":"Needs greater coverage and to test differences between Jython, python2 and python 3 - Use of python component throughout reg pack provides significant coverage already for python 3","colour":"f9c21b"}},"variables":{"date":{"definition":{"name":"date","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"2020-02-02"},"number":{"definition":{"name":"number","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"123"},"rc":{"definition":{"name":"rc","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"text":{"definition":{"name":"text","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"text"}},"grids":{}},"info":{"name":"pythonJob","description":null,"type":"ORCHESTRATION","tag":"cd890e5e-4951-465b-99e8-c4fcc347dc2c"}}