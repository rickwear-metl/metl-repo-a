{"job":{"components":{"1767":{"id":1767,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":0,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[1771],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Start","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1768":{"id":1768,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":520523248,"x":208,"y":0,"width":32,"height":32,"inputConnectorIDs":[1770],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Assert Scalar Variables 0"}}}},"visible":true},"2":{"slot":2,"name":"Assertions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"jvt"},"2":{"slot":2,"type":"STRING","value":"text"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"jvn"},"2":{"slot":2,"type":"STRING","value":"123"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"jvd"},"2":{"slot":2,"type":"STRING","value":"2020-01-02"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"evt"},"2":{"slot":2,"type":"STRING","value":"context"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"evn"},"2":{"slot":2,"type":"STRING","value":"456"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"evd"},"2":{"slot":2,"type":"STRING","value":"2021-03-02"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"message"},"2":{"slot":2,"type":"STRING","value":"message"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"1769":{"id":1769,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1773186829,"x":96,"y":0,"width":32,"height":32,"inputConnectorIDs":[1771],"outputSuccessConnectorIDs":[1770],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Message","mapTo":"message"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python Script 0"}}}},"visible":true},"2":{"slot":2,"name":"Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"###\n# Variables are directly accessible: \n#   print (myvar)\n# Updating a variable:\n#   context.updateVariable('myvar', 'new-value')\n# Grid Variables are accessible via the context:\n#   print (context.getGridVariable('mygridvar'))\n# Updating a grid variable:\n#   context.updateGridVariable('mygridvar', [['list','of'],['lists','!']])\n# A database cursor can be accessed from the context (Jython only):\n#   cursor = context.cursor()\n#   cursor.execute('select count(*) from mytable')\n#   rowcount = cursor.fetchone()[0]\n###\n\n###\n# Note: Python scripts within this component are executed by the underlying virtual machine hosting Matillion ETL\n# and utilise the memory and compute of this VM, this component is not designed for large scale data processing\n# scripts involving PySpark or other such compute-intensive packages\n###\ncontext.updateVariable('evt', 'context')\ncontext.updateVariable('evn', 456)\ncontext.updateVariable('evd', '2021-03-02')\nprint(\"message\")"}}}},"visible":true},"3":{"slot":3,"name":"Interpreter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Python 3"}}}},"visible":true},"4":{"slot":4,"name":"Timeout","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"360"}}}},"visible":true},"5":{"slot":5,"name":"User","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Restricted"}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"1770":{"id":1770,"sourceID":1769,"targetID":1768}},"failureConnectors":{},"unconditionalConnectors":{"1771":{"id":1771,"sourceID":1767,"targetID":1769}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"1765":{"id":1765,"x":-14,"y":51,"width":250,"height":58,"text":"Asserting using vars with values\nenv vars\nand export tab","colour":"00ce4f"},"1766":{"id":1766,"x":-102,"y":-133,"width":250,"height":58,"text":"Expand? & Standardise naming","colour":"f9c21b"}},"variables":{"jvd":{"definition":{"name":"jvd","type":"DATETIME","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"2020-01-02"},"jvn":{"definition":{"name":"jvn","type":"DECIMAL","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"123"},"jvt":{"definition":{"name":"jvt","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"text"},"message":{"definition":{"name":"message","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""}},"grids":{}},"info":{"name":"assert scalar vars","description":null,"type":"ORCHESTRATION","tag":"cbbe7655-cb76-4bc7-9ee6-bf8769b128f4"}}